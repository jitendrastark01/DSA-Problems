**/ Given a strictly sorted 2D matrix mat[][] of size n x m and a number x. Find whether the number x is present in the matrix or not.
Note: In a strictly sorted matrix, each row is sorted in strictly increasing order, and the first element of the ith row (i!=0) is greater than the last element of the (i-1)th row. **/


// JAVA code

class Solution {
    // Function to search a given number in row-column sorted matrix.
    public boolean searchMatrix(int[][] mat, int x) {
        // code here
         int n = mat.length;
        int m = mat[0].length;
        int beg = 0, end = n*m -1;
        
        while(beg <= end){
            int mid = (beg + end)/2;
            
            int rNo = mid/m;
            int cNo = mid%m;
            if(mat[rNo][cNo] == x)
            
               return true;
                
            if(mat[rNo][cNo] < x)
            {
                beg = mid +1;
            }
            else
            end = mid-1;
        }
        return false;
        
    }
}


