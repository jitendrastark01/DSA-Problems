 // JAVA CODE......

class Solution {
    public ArrayList<Integer> maxOfMins(int[] arr) {
        // Your code here
        
     int n=arr.length;
     int left[]=new int [n];
     int right[]=new int [n];
     int ans[]=new int [n+1];
     
     Arrays.fill(left,-1);
     Arrays.fill(right,n);
     
     Stack<Integer> stack=new Stack<>();
     for(int i=0;i<n;i++){
         while(!stack.isEmpty() && arr[stack.peek()]>=arr[i]){
             stack.pop();
         }
         if(!stack.isEmpty()){
             left[i]=stack.peek();
         }
         stack.push(i);
         
     }
     stack.clear();
     
    for(int i=n-1;i>=0;i--){
        while(!stack.isEmpty() && arr[stack.peek()]>=arr[i]){
            stack.pop();
        }
        if(!stack.isEmpty()){
            right[i]=stack.peek();
        }
        stack.push(i);
    }
    
    for(int i=0;i<n;i++){
        int windowsize=right[i]-left[i]-1;
        ans[windowsize]=Math.max(ans[windowsize],arr[i]);
    }
    for(int i=n-1;i>=1;i--){
        ans[i]=Math.max(ans[i],ans[i+1]);
    }
    
    ArrayList<Integer> result=new ArrayList<>();
   for(int i=1;i<=n;i++){
       result.add(ans[i]);
        
    }
     return result;
     }
     
    }
